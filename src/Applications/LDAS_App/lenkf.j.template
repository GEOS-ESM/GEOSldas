#!/bin/csh -f

#######################################################################
#                     Batch Parameters for Run Job
#######################################################################

#SBATCH --output=../scratch/GEOSldas_log_txt
#SBATCH --error=../scratch/GEOSldas_err_txt
#SBATCH --account=MY_ACCOUNT
#SBATCH --time=MY_WALLTIME
#SBATCH --ntasks=MY_NTASKS
#SBATCH --job-name=MY_JOB
#SBATCH --constraint=MY_CONS
#SBATCH --qos=MY_QOS

#######################################################################
#    System Settings and Architecture Specific Environment Variables
#######################################################################
umask 022
limit stacksize unlimited
setenv ARCH `uname`

setenv EXPID      MY_EXPID
setenv EXPDOMAIN  MY_EXPDOMAIN
setenv EXPDIR     MY_EXPDIR
setenv ESMADIR    $EXPDIR/build/
setenv GEOSBIN    $ESMADIR/bin/
source $GEOSBIN/g5_modules

setenv I_MPI_DAPL_UD enable

setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${BASEDIR}/${ARCH}/lib
if ( -e /etc/os-release ) then
  module load nco/4.8.1
else
  module load other/nco-4.6.8-gcc-5.3-sp3
endif
setenv RUN_CMD "$GEOSBIN/esma_mpirun -np "

#######################################################################
#             Experiment Specific Environment Variables
#######################################################################

setenv    HOMDIR     $EXPDIR/run/
setenv    SCRDIR     $EXPDIR/scratch
setenv    MODEL      MY_MODEL
@         NENS  =    MY_ENSEMBLE
setenv    MYNAME `finger $USER | cut -d: -f3 | head -1`
setenv    NODAILIES  MY_MONTHLY

#
# DEBUGGER : 0 -- no debugger
#          : 1 -- Totalview
#          : 2 -- DDT

setenv  DEBUGGER  $1
if ( "$1" == "" || $1 == 0 ) then  # if nothing is passed, no debuger
   setenv  DEBUGGER  0
else if ( $1 == 1 ) then
   echo "Using Totalview to debug"
else if ( $1 == 2 ) then 
   echo "Using DDT to debug"
else
   echo "Please use 1 (Totalview ) or 2 (DDT) to debug"
   exit
endif

#######################################################################
#                   Set Experiment Run Parameters
#######################################################################

if (! -e $SCRDIR            ) mkdir -p $SCRDIR

set END_DATE  = `grep     END_DATE:  $HOMDIR/CAP.rc | cut -d':' -f2`
set NUM_SGMT  = `grep     NUM_SGMT:  $HOMDIR/CAP.rc | cut -d':' -f2`

#######################################################################
#        Move to Scratch Directory and Copy .rc .nml .rst files
#######################################################################

cd $SCRDIR
/bin/rm -rf *.*
/bin/cp     $HOMDIR/cap_restart .
/bin/cp -f  $HOMDIR/*.rc .
/bin/cp -f  $HOMDIR/*.nml .

set LSMCHOICE = `grep -n -m 1 "LSM_CHOICE" $HOMDIR/LDAS.rc | cut -d':' -f3`

if( ${LSMCHOICE} == 2 ) then # CatchCN Only
    ln -s /discover/nobackup/projects/gmao/ssd/land/l_data/LandBCs_files_for_mkCatchParam/V001/CO2_MonthlyMean_DiurnalCycle.nc4
    ln -s /discover/nobackup/projects/gmao/ssd/land/l_data/LandBCs_files_for_mkCatchParam/V001/FPAR_CDF_Params-M09.nc4
endif

#######################################################################
#                      Domain Decomposition
#######################################################################

set numprocs = `head -n 20 $HOMDIR/lenkf.j | grep ntasks | cut -d'=' -f2`
if( -e IMS.rc ) then
   set oldtasks = `head -n 1 IMS.rc`
   if($numprocs != $oldtasks) then
      $GEOSBIN/preprocess_ldas.x optimize ../input/tile.data $numprocs nothing nothing nothing
   endif
endif

if( -e JMS.rc ) then
   set oldtasks = `head -n 1 JMS.rc | cut -c1-5`
   if($numprocs != $oldtasks) then
      $GEOSBIN/preprocess_ldas.x optimize ../input/tile.data $numprocs nothing nothing nothing
   endif
endif

set gridname = `grep GEOSldas.GRIDNAME LDAS.rc | cut -d':' -f2 | cut -d'-'  -f2 | awk '{print $1}'`
if ( "$gridname" == "CF" ) then
   set new_ny = `echo "NY:  "$numprocs`
   sed -i "/NY:/c\\$new_ny" LDAS.rc
else
   set new_nx = `echo "NX:  "$numprocs`
   sed -i "/NX:/c\\$new_nx" LDAS.rc
endif

#######################################################################
#         Create Strip Utility to Remove Multiple Blank Spaces
#######################################################################

set      FILE = strip
/bin/rm $FILE
cat << EOF > $FILE
#!/bin/ksh
/bin/mv \$1 \$1.tmp
touch   \$1
while read line
do
echo \$line >> \$1
done < \$1.tmp
exit
EOF
chmod +x $FILE

##################################################################
######
######         Perform multiple iterations of Model Run
######
##################################################################

@ counter    = 1
while ( $counter <= ${NUM_SGMT} )

   /bin/rm -f  EGRESS.ldas
   /bin/cp -f $HOMDIR/CAP.rc .
   ./strip            CAP.rc
   
   # Set Time Variables for Current_(c), Ending_(e), and Segment_(s) dates 
   # ---------------------------------------------------------------------
   set nymdc = `cat cap_restart | cut -c1-8`
   set nhmsc = `cat cap_restart | cut -c10-15`
   set nymde = `cat CAP.rc | grep END_DATE:     | cut -d: -f2 | cut -c2-9`
   set nhmse = `cat CAP.rc | grep END_DATE:     | cut -d: -f2 | cut -c11-16`
   set nymds = `cat CAP.rc | grep JOB_SGMT:     | cut -d: -f2 | cut -c2-9`
   set nhmss = `cat CAP.rc | grep JOB_SGMT:     | cut -d: -f2 | cut -c11-16`
   
   # Compute Time Variables at the Finish_(f) of current segment
   # -----------------------------------------------------------
   set nyear   = `echo $nymds | cut -c1-4`
   set nmonth  = `echo $nymds | cut -c5-6`
   set nday    = `echo $nymds | cut -c7-8`
   set nhour   = `echo $nhmss | cut -c1-2`
   set nminute = `echo $nhmss | cut -c3-4`
   set nsec    = `echo $nhmss | cut -c5-6`
          @ dt = $nsec + 60 * $nminute + 3600 * $nhour + 86400 * $nday
   
   set nymdf = $nymdc
   set nhmsf = $nhmsc
   set date  = `$GEOSBIN/tick $nymdf $nhmsf $dt`
   set nymdf =  $date[1]
   set nhmsf =  $date[2]
   set year  = `echo $nymdf | cut -c1-4`
   set month = `echo $nymdf | cut -c5-6`
   set day   = `echo $nymdf | cut -c7-8`
   
        @  month = $month + $nmonth
   while( $month > 12 )
        @  month = $month - 12
        @  year  = $year  + 1
   end
        @  year  = $year  + $nyear
        @ nymdf  = $year * 10000 + $month * 100 + $day
   
   if( $nymdf >  $nymde )    set nymdf = $nymde
   if( $nymdf == $nymde )    then
       if( $nhmsf > $nhmse ) set nhmsf = $nhmse
   endif
   
   set yearc = `echo $nymdc | cut -c1-4`
   set yearf = `echo $nymdf | cut -c1-4`
   
   # Prescribed LAI/SAI for CATCHCN
   # -------------------------------
   
   set PRESCRIBE_DVG = `grep PRESCRIBE_DVG LDAS.rc | cut -d':' -f2`
   if( ${PRESCRIBE_DVG} == 3 ) then
       set FCSTDATE = `grep FCAST_BEGTIME  $HOMDIR/LDAS.rc | cut -d':' -f2`
       if( `echo $FCSTDATE | cut -d' ' -f1` == "" ) then
           set CAPRES = `cat cap_restart`
           set CAPRES1 = `echo $CAPRES | cut -d' ' -f1`
           set CAPRES2 = `echo $CAPRES | cut -d' ' -f2`
           set CAPRES = 'FCAST_BEGTIME: '`echo $CAPRES1``echo $CAPRES2`
           echo $CAPRES >> $HOMDIR/LDAS.rc
           /bin/cp -p $HOMDIR/LDAS.rc .
       endif
   endif
   
   if( ${PRESCRIBE_DVG} >= 1 ) then
   
       # Modify local CAP.rc Ending date if Finish time exceeds Current year boundary
       # ----------------------------------------------------------------------------
    
       if( $yearf > $yearc ) then
          @ yearf = $yearc + 1
          @ nymdf = $yearf * 10000 + 0101
           set oldstring = `cat CAP.rc | grep END_DATE:`
           set newstring = "END_DATE: $nymdf $nhmsf"
           /bin/mv CAP.rc CAP.tmp
           cat CAP.tmp | sed -e "s?$oldstring?$newstring?g" > CAP.rc
       endif
   
       # Creaate VEGDATA FIle Links
       # --------------------------
   
       if( ${PRESCRIBE_DVG} == 1 ) set VEGYR = $yearc
       if( ${PRESCRIBE_DVG} >= 2 ) set VEGYR = CLIM
   
       set FILE = vegfile
       set   nz = 1
       /bin/rm CNLAI*
       /bin/rm CNSAI*
   
       while ( $nz <= 3 )
   	set   nv = 1 
   	while ($nv <= 4 )
   	    /bin/ln -s ../VEGDATA/CNLAI${nv}${nz}_${VEGYR}.data CNLAI${nv}${nz}.data
   	    /bin/ln -s ../VEGDATA/CNSAI${nv}${nz}_${VEGYR}.data CNSAI${nv}${nz}.data
   	    echo "CNLAI${nv}${nz}_FILE:                       CNLAI${nv}${nz}.data" >> $FILE
   	    echo "CNSAI${nv}${nz}_FILE:                       CNSAI${nv}${nz}.data" >> $FILE
   	    @ nv++ 
           end
   	@ nz++
       end
       /bin/mv LDAS.rc LDAS.rc.tmp
       cat LDAS.rc.tmp $FILE >> LDAS.rc
       /bin/rm LDAS.rc.tmp $FILE
   endif
   
   # ----------------------------------------------------------------------------
   
   set bYEAR = `cat cap_restart | cut -c1-4`
   set bMON  = `cat cap_restart | cut -c5-6`
   set bDAY  = `cat cap_restart | cut -c7-8`
   set bHour = `cat cap_restart | cut -c10-11`
   set bMin  = `cat cap_restart | cut -c12-13`
   
   if($counter == 1) then
      set logYEAR = $bYEAR
      set logMON  = $bMON
      set logDAY  = $bDAY
      set logHour = $bHour
      set logMin  = $bMin
   endif
   
   set old_mwrtm_file  =  $EXPDIR/output/$EXPDOMAIN/rc_out/Y${bYEAR}/M${bMON}/${EXPID}.ldas_mwRTMparam.${bYEAR}${bMON}${bDAY}_${bHour}${bMin}z.nc4
   set old_catch_param =  $EXPDIR/output/$EXPDOMAIN/rc_out/Y${bYEAR}/M${bMON}/${EXPID}.ldas_catparam.${bYEAR}${bMON}${bDAY}_${bHour}${bMin}z.bin
   if ( -l "$old_mwrtm_file" ) then
      set old_mwrtm_file = `/usr/bin/readlink -f $old_mwrtm_file`
   endif  
   if ( -l "$old_catch_param" ) then
      set old_catch_param = `/usr/bin/readlink -f $old_catch_param`
   endif  

 
   /bin/cp LDAS.rc  $EXPDIR/output/$EXPDOMAIN/rc_out/Y${bYEAR}/M${bMON}/${EXPID}.ldas_LDAS_rc.${bYEAR}${bMON}${bDAY}_${bHour}${bMin}z.txt
   /bin/cp CAP.rc  $EXPDIR/output/$EXPDOMAIN/rc_out/Y${bYEAR}/M${bMON}/${EXPID}.ldas_CAP_rc.${bYEAR}${bMON}${bDAY}_${bHour}${bMin}z.txt
   
   # Run GEOSldas.x
   # --------------
   
   # Debugging
   # ---------
   if( $DEBUGGER == 1) then
       module load tool/tview-2018.0.5
       totalview $GEOSBIN/GEOSldas.x
       exit
   endif 
   if( $DEBUGGER == 2) then
       module load tool/arm-forge-19.0.3
       ddt $GEOSBIN/GEOSldas.x
       exit
   endif
   
   $GEOSBIN/RmShmKeys_sshmpi.csh
   $RUN_CMD $numprocs $GEOSBIN/GEOSldas.x
   
   if( -e EGRESS.ldas ) then
      set rc = 0
   else
      set rc = -1
   endif
   echo GEOSldas Run Status: $rc
    
   
   #######################################################################
   #               Move HISTORY Files to cat/ens Directory
   #######################################################################
   
   set outfiles = `ls $EXPID.*[bin,nc4]`
   set TILECOORD=`ls ../output/*/rc_out/*ldas_tilecoord.bin`
   
   # Move current files to /cat/ens
   # ------------------------------
   
   foreach ofile ( $outfiles )
      set ThisTime = `echo $ofile | rev | cut -d'.' -f2 | rev`
      set TY = `echo $ThisTime | cut -c1-4`
      set TM = `echo $ThisTime | cut -c5-6`
      if ($NENS == 1) then
         set THISDIR = $EXPDIR/output/$EXPDOMAIN/cat/ens0000/Y${TY}/M${TM}/
      else
         set THISDIR = $EXPDIR/output/$EXPDOMAIN/cat/ens_avg/Y${TY}/M${TM}/
      endif
      if (! -e $THISDIR            ) mkdir -p $THISDIR
     
      set file_ext = `echo $ofile | rev | cut -d'.' -f1 | rev`
   
      if($file_ext == nc4) then
         /bin/mv $ofile $THISDIR/.
      else
         set binfile   = `echo $ofile | rev | cut -d'.' -f2- | rev`
         set decr_file = `echo $ofile | rev | cut -d'.' -f3- | rev`.ctl
         $GEOSBIN/tile_bin2nc4.x $binfile $decr_file $TILECOORD
         /bin/mv ${binfile}.nc4 $THISDIR/.
         /bin/rm ${binfile}.bin
      endif
   end
   
   #######################################################################
   #              Create HISTORY Collection Directories
   #######################################################################
   
   set collections = ''
   foreach line ("`cat HISTORY.rc`")
      set firstword  = `echo $line | awk '{print $1}'`
      set firstchar  = `echo $firstword | cut -c1`
      set secondword = `echo $line | awk '{print $2}'`
   
      if ( $firstword == "::" ) goto done
   
      if ( $firstchar != "#" ) then
         set collection  = `echo $firstword | sed -e "s/'//g"`
         set collections = `echo $collections $collection`
         if ( $secondword == :: ) goto done
      endif
   
      if ( $firstword == COLLECTIONS: ) then
         set collections = `echo $secondword | sed -e "s/'//g"`
      endif
   end
   
   done:
   
   #######################################################################
   #            (1) Concatenating Sub-daily Files to Daily Files
   #            (2) Write monthly means  
   #######################################################################
   
   if ($NODAILIES > 0) then
   
     set PWD = `pwd`
   
     if ($NENS == 1) then
        set OUTDIR = $EXPDIR/output/$EXPDOMAIN/cat/ens0000/
     else
        set OUTDIR = $EXPDIR/output/$EXPDOMAIN/cat/ens_avg/
     endif
   
     set MONTHDIRS = `ls -d $OUTDIR/*/*`
   
     foreach THISMONTH ($MONTHDIRS)
   
       set MM = `echo $THISMONTH | rev | cut -d'/' -f1 | cut -c1-2 | rev`
       set YYYY = `echo $THISMONTH | rev | cut -d'/' -f2 | cut -c1-4 | rev`
       set NDAYS = `cal $MM $YYYY | awk 'NF {DAYS = $NF}; END {print DAYS}'`
       
       cd $THISMONTH
       
       foreach ThisCol ($collections)
   
          # if monthly exists, move on to the next collection
          if (-f $EXPID.${ThisCol}.monthly.$YYYY$MM.nc4) continue
   
          set time_steps = `ls -1 $EXPID.$ThisCol.${YYYY}${MM}* | rev | cut -d'.' -f2 | cut -d'.' -f1 | rev`
          set tstep2 = \"`echo $time_steps | sed 's/\ /\","/g'`\"
          set LEN = `echo $#time_steps`
          # no file? move on  
          if ($LEN == 0) continue
    
          set dayl = `echo $time_steps[$LEN] | cut -c1-8`
          set day1 = `echo $time_steps[1] | cut -c1-8`
          @ NAVAIL = ($dayl - $day1) + 1
   
          # not enough days? move on to the next collection
          if($NAVAIL != $NDAYS) continue
   
          set time_steps = `ls -1 $EXPID.$ThisCol.${YYYY}${MM}01* | rev | cut -d'.' -f2 | cut -d'.' -f1 | rev`
          set LEN_SUB = `echo $#time_steps`
          @ LEN_AVAIL = $LEN_SUB * $NDAYS
   
          # not enough sub-daylies? move on to the next collection
          if ($LEN != $LEN_AVAIL) continue
   
          # create the monly average
          #ncrcat -h $EXPID.$ThisCol.${YYYY}${MM}* ${EXPID}.${ThisCol}.$YYYY$MM.nc4
          #ncra -h $EXPID.${ThisCol}.$YYYY$MM.nc4 $EXPID.${ThisCol}.monthly.$YYYY$MM.nc4
          
          #/bin/rm $EXPID.${ThisCol}.$YYYY$MM.nc4
          ncra -h $EXPID.$ThisCol.${YYYY}${MM}??_*z.nc4 ${EXPID}.${ThisCol}.monthly.$YYYY$MM.nc4
          
          # don't want a daily? delete the daily and sub-dailies and continue
          #
          if($NODAILIES == 2) then
             /bin/rm $EXPID.${ThisCol}.${YYYY}${MM}*
             continue
          endif
   
          # create daily and remove the sub-daily
          # ------------------------------------------------------------------
          set day=1
          while ($day <= $NDAYS && $LEN_SUB > 1)
             if ( $day < 10  ) set DD=0${day}
             if ( $day >= 10 ) set DD=${day}
   
             set time_steps = `ls -1 $EXPID.$ThisCol.${YYYY}${MM}${DD}_* | rev | cut -d'.' -f2 | cut -d'.' -f1 | rev`
             set tstep2 = \"`echo $time_steps | sed 's/\ /\","/g'`\"
   
   cat << EOF > timestamp.cdl
   netcdf timestamp {
   dimensions:
   time = UNLIMITED ; // (NT currently)
   string_length = 14 ;
   variables:
   char time_stamp (time, string_length) ;
   
   data:
   
   time_stamp =
   DATAVALUES;
   }      
   EOF
   
             sed -i -e "s/NT/$LEN_SUB/g" timestamp.cdl
             sed -i -e "s/DATAVALUES/$tstep2/g" timestamp.cdl
             ncgen -k4 -o timestamp.nc4 timestamp.cdl
             ncrcat -h $EXPID.$ThisCol.${YYYY}${MM}${DD}_* ${EXPID}.${ThisCol}.$YYYY$MM$DD.nc4
             ncks -4 -h -v time_stamp timestamp.nc4 -A ${EXPID}.${ThisCol}.$YYYY$MM$DD.nc4
             /bin/rm timestamp.cdl
             /bin/rm timestamp.nc4
             /bin/rm $EXPID.${ThisCol}.${YYYY}${MM}${DD}_*.nc4 
             @ day++ 
          end # concatenate for each day 
       end # each collection
     end # each month
     cd $PWD
   endif # dailies > 0
   
   #######################################################################
   #   Rename Final Checkpoints => Restarts for Next Segment and Archive
   #        Note: cap_restart contains the current NYMD and NHMS
   #######################################################################
   
   set edate  = e`cat cap_restart | cut -c1-8`_`cat cap_restart | cut -c10-11`z
   set eYEAR = `cat cap_restart | cut -c1-4`
   set eMON  = `cat cap_restart | cut -c5-6`
   set eDAY  = `cat cap_restart | cut -c7-8`
   set eHour = `cat cap_restart | cut -c10-11`
   set eMin  = `cat cap_restart | cut -c12-13`
   
   # Create rc_out/YYYY/MM 
   # ---------------------
   
   set THISDIR = $EXPDIR/output/$EXPDOMAIN/rc_out/Y${eYEAR}/M${eMON}/
   if (! -e $THISDIR  ) mkdir -p $THISDIR
   
   # Move mwrtm and cat_param
   
   set new_mwrtm_file  =  $EXPDIR/output/$EXPDOMAIN/rc_out/Y${eYEAR}/M${eMON}/${EXPID}.ldas_mwRTMparam.${eYEAR}${eMON}${eDAY}_${eHour}${eMin}z.nc4
   set new_catch_param =  $EXPDIR/output/$EXPDOMAIN/rc_out/Y${eYEAR}/M${eMON}/${EXPID}.ldas_catparam.${eYEAR}${eMON}${eDAY}_${eHour}${eMin}z.bin
   
   if (-f $old_mwrtm_file) then
     if ( -l "$new_mwrtm_file" ) then
        /bin/rm -f $new_mwrtm_file
     endif
     /bin/ln -s $old_mwrtm_file $new_mwrtm_file
     /bin/rm ../input/restart/mwrtm_param_rst
     /bin/ln -s $new_mwrtm_file ../input/restart/mwrtm_param_rst
   endif
   
   if (-f $old_catch_param) then
     if ( -l "$new_catch_param" ) then
        /bin/rm -f $new_catch_param
     endif
     /bin/ln -s $old_catch_param $new_catch_param
   endif
   
   # Move Intermediate Checkpoints to RESTARTS directory
   # ---------------------------------------------------
   
   @ inens = 0
   while ($inens < $NENS)
       if ($inens <10) then
          set ENSDIR = `echo ens000${inens}`
       else if($inens<100) then
          set ENSDIR=`echo ens00${inens}`
       else if($inens < 1000) then
          set ENSDIR =`echo ens0${inens}`
       else
          set ENSDIR = `echo ens${inens}`
       endif
       set ENSID = `echo $ENSDIR | cut -c4-7`
       if ( $NENS == 1) set ENSID =''
       set THISDIR = $EXPDIR/output/$EXPDOMAIN/rs/$ENSDIR/Y${eYEAR}/M${eMON}/
       if (! -e $THISDIR            ) mkdir -p $THISDIR
   
       set rstf = ${MODEL} 
       if (-f ${rstf}${ENSID}_internal_checkpoint ) then
          set tmp_file = $EXPDIR/output/$EXPDOMAIN/rs/$ENSDIR/Y${eYEAR}/M${eMON}/${EXPID}.${rstf}_internal_rst.${eYEAR}${eMON}${eDAY}_${eHour}${eMin}
          /bin/mv ${rstf}${ENSID}_internal_checkpoint $tmp_file
          /bin/rm -f $EXPDIR/input/restart/${rstf}${ENSID}_internal_rst
          /bin/ln -s  $tmp_file $EXPDIR/input/restart/${rstf}${ENSID}_internal_rst
       endif
   
       set rstf = 'landpert'
       if (-f ${rstf}${ENSID}_internal_checkpoint ) then
          set tmp_file = $EXPDIR/output/$EXPDOMAIN/rs/$ENSDIR/Y${eYEAR}/M${eMON}/${EXPID}.${rstf}_internal_rst.${eYEAR}${eMON}${eDAY}_${eHour}${eMin}
          ncks -4 -O -C -x -v lat,lon ${rstf}${ENSID}_internal_checkpoint $tmp_file
          /bin/rm -f ${rstf}${ENSID}_internal_checkpoint 
          set old_rst = `/usr/bin/readlink -f $EXPDIR/input/restart/${rstf}${ENSID}_internal_rst`
          /bin/rm -f $EXPDIR/input/restart/${rstf}${ENSID}_internal_rst
          /bin/ln -s $tmp_file $EXPDIR/input/restart/${rstf}${ENSID}_internal_rst
          /usr/bin/gzip $old_rst
       endif
   
       set rstf = 'landassim_obspertrseed'
       if (-f ${rstf}${ENSID}_checkpoint ) then
          set tmp_file = $EXPDIR/output/$EXPDOMAIN/rs/$ENSDIR/Y${eYEAR}/M${eMON}/${EXPID}.${rstf}_rst.${eYEAR}${eMON}${eDAY}_${eHour}${eMin}
          /bin/mv ${rstf}${ENSID}_checkpoint $tmp_file
          /bin/rm -f $EXPDIR/input/restart/${rstf}${ENSID}_rst
          /bin/ln -s $tmp_file $EXPDIR/input/restart/${rstf}${ENSID}_rst
       endif
   # move intermediate check point files to  output/$EXPDOMAIN/rs/$ENSDIR/Yyyyy/Mmm/ directories
   # -------------------------------------------------------------------------------------------
   
       set rstfiles1 = `ls ${MODEL}${ENSID}_internal_checkpoint*`
       set rstfiles2 = `ls landpert${ENSID}_internal_checkpoint*`
       set rstfiles3 = `ls landassim_obspertrseed${ENSID}_checkpoint*`
   
       set NFILES = `echo $#rstfiles1`
       if($NFILES > 0) then
          foreach rfile ( $rstfiles1 ) 
             set ThisTime = `echo $rfile | rev | cut -d'.' -f2 | rev`
             set TY = `echo $ThisTime | cut -c1-4`
             set TM = `echo $ThisTime | cut -c5-6` 
             set THISDIR = $EXPDIR/output/$EXPDOMAIN/rs/$ENSDIR/Y${TY}/M${TM}/
             if (! -e $THISDIR            ) mkdir -p $THISDIR
             /bin/mv $rfile ${THISDIR}${EXPID}.${MODEL}_internal_rst.${ThisTime}.nc4
          end
       endif
       
       set NFILES = `echo $#rstfiles2`
       if($NFILES > 0) then
          foreach rfile ( $rstfiles2 ) 
             set ThisTime = `echo $rfile | rev | cut -d'.' -f2 | rev`
             set TY = `echo $ThisTime | cut -c1-4`
             set TM = `echo $ThisTime | cut -c5-6` 
             set THISDIR = $EXPDIR/output/$EXPDOMAIN/rs/$ENSDIR/Y${TY}/M${TM}/
             if (! -e $THISDIR            ) mkdir -p $THISDIR
             ncks -4 -O -C -x -v lat,lon $rfile ${THISDIR}${EXPID}.landpert_internal_rst.${ThisTime}.nc4
             /usr/bin/gzip ${THISDIR}${EXPID}.landpert_internal_rst.${ThisTime}.nc4
             /bin/rm -f $rfile
          end
       endif
   
       set NFILES = `echo $#rstfiles3`
       if($NFILES > 0) then
          foreach rfile ( $rstfiles3 ) 
             set ThisTime = `echo $rfile | rev | cut -d'.' -f2 | rev`
             set TY = `echo $ThisTime | cut -c1-4`
             set TM = `echo $ThisTime | cut -c5-6` 
             set THISDIR = $EXPDIR/output/$EXPDOMAIN/rs/$ENSDIR/Y${TY}/M${TM}/
             if (! -e $THISDIR            ) mkdir -p $THISDIR
             /bin/mv $rfile ${THISDIR}${EXPID}.landassim_obspertrseed_rst.${ThisTime}.nc4
          end
       endif
   
       @ inens ++
   end  ## end of while ($inens < $NENS)
   
   #####################
   # update cap_restart
   # ##################
   
   set CO2LINE = `grep -n -m 1 "CO2_YEAR" $HOMDIR/LDAS.rc | cut -d':' -f1`
   
   if ( $CO2LINE >= 1 ) then
   
       # Update reference year for Carbon Tracker CO2
       ##############################################
       
       set CO2_BEFORE = `sed -n "${CO2LINE}p;d" LDAS.rc | cut -d':' -f2`
       set CAP_BEFORE = `head -1 $HOMDIR/cap_restart | cut -c1-4` 
       @ DY = $CAP_BEFORE - $CO2_BEFORE
       @ CO2_AFTER = `head -1 cap_restart | cut -c1-4` - $DY
       set CO2UPDATE = "CO2_YEAR: $CO2_AFTER"
       sed -i "${CO2LINE} s|.*|$CO2UPDATE|" LDAS.rc
       /bin/rm -f $HOMDIR//LDAS.rc
       /bin/cp -p LDAS.rc $HOMDIR/LDAS.rc
   endif
   
   /bin/rm -f $HOMDIR/cap_restart
   /bin/cp cap_restart $HOMDIR/cap_restart
   
   #######################################################################
   #                         Update Iteration Counter
   #######################################################################
   
   set enddate = `echo  $END_DATE | cut -c1-8`
   set capdate = `cat cap_restart | cut -c1-8`
   
   if ( $capdate < $enddate ) then
   @ counter = $counter    + 1
   else
   @ counter = ${NUM_SGMT} + 1
   endif
   
## End of the while ( $counter <= ${NUM_SGMT} ) loop ##
end

#######################################################################
#            set next log and error file 
#######################################################################

set logfile = $EXPDIR/output/$EXPDOMAIN/rc_out/Y${logYEAR}/M${logMON}/${EXPID}.ldas_log.${logYEAR}${logMON}${logDAY}_${logHour}${logMin}z.txt
set errfile = $EXPDIR/output/$EXPDOMAIN/rc_out/Y${logYEAR}/M${logMON}/${EXPID}.ldas_err.${logYEAR}${logMON}${logDAY}_${logHour}${logMin}z.txt

if (-f GEOSldas_log_txt) then
   /bin/cp GEOSldas_log_txt $logfile
   /bin/rm -f GEOSldas_log_txt 
endif

if(-f GEOSldas_err_txt) then
  /bin/cp GEOSldas_err_txt $errfile
  /bin/rm -f GEOSldas_err_txt 
endif

#######################################################################
#                              Re-Submit Job
#######################################################################

if ( $rc == 0 ) then
   cd   $HOMDIR
   #don't change below line(not even extra space)
   if($capdate<$enddate) sbatch $HOMDIR/lenkf.j
endif
